//  Catapult Ultra Synthesis 2023.1_2/1049935 (Production Release) Sat Jun 10 10:53:51 PDT 2023
//  
//          Copyright (c) Siemens EDA, 1996-2023, All Rights Reserved.
//                        UNPUBLISHED, LICENSED SOFTWARE.
//             CONFIDENTIAL AND PROPRIETARY INFORMATION WHICH IS THE
//                   PROPERTY OF SIEMENS EDA OR ITS LICENSORS.
//  
//  Running on Linux ajh9498@hansolo.poly.edu 4.18.0-553.33.1.el8_10.x86_64 x86_64 aol
//  
//  Package information: SIFLIBS v26.1_2.0, HLS_PKGS v26.1_2.0, 
//                       SIF_TOOLKITS v26.1_2.0, SIF_XILINX v26.1_2.0, 
//                       SIF_ALTERA v26.1_2.0, CCS_LIBS v26.1_2.0, 
//                       CDS_PPRO v2022.1_1, CDS_DesigChecker v2023.1_1, 
//                       CDS_OASYS v21.1_3.1, CDS_PSR v22.2_0.9, 
//                       DesignPad v2.78_1.0
//  
# Connected to license server 1717@pyke.poly.edu (LIC-13)
# Catapult product license successfully checked out, elapsed time 00:01 (LIC-14)
dofile ./scripts/directives.tcl
# > options set Output/OutputVHDL false
# false
# > options set Output/RTLSchem false
# false
# > options set Input/TargetPlatform x86_64
# x86_64
# > solution options set /Flows/SCVerify/USE_CCS_BLOCK true
# true
# > flow package option set /SCVerify/USE_NCSIM true
# true
# > flow package option set /SCVerify/USE_VCS true
# true
# > flow package require /SCVerify
# 10.4
# > solution file add src/fir.cpp -type C++
# /INPUTFILES/1
# > solution file add src/fir.h -type C++ -exclude true
# /INPUTFILES/2
# > solution file add src/types.h -type C++ -exclude true
# /INPUTFILES/3
# > solution file add src/main.cpp -type C++ -exclude true
# /INPUTFILES/4
# > solution design set fir -top
# solution design set fir -top (HC-8)
# > go new
# > go compile
# Info: Starting transformation 'analyze' on solution 'solution.v1' (SOL-8)
# Creating project directory '/home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/'. (PRJ-1)
# Moving session transcript to file "/home/ajh9498/Documents/SALSA/FIR_COMPLEX/catapult.log"
# Front End called with arguments: -- /home/ajh9498/Documents/SALSA/FIR_COMPLEX/src/fir.cpp (CIN-69)
# Edison Design Group C++/C Front End - Version 6.3 (CIN-1)
# Source file analysis completed (CIN-68)
# Info: Completed transformation 'analyze' on solution 'solution.v1': elapsed time 4.17 seconds, memory usage 1309500kB, peak memory usage 1309500kB (SOL-9)
# Info: Starting transformation 'compile' on solution 'fir.v1' (SOL-8)
# Generating synthesis internal form... (CIN-3)
# $PROJECT_HOME/src/fir.cpp(3): Found top design routine 'fir' specified by directive (CIN-52)
# $PROJECT_HOME/src/fir.cpp(3): Synthesizing routine 'fir' (CIN-13)
# $PROJECT_HOME/src/fir.cpp(3): Inlining routine 'fir' (CIN-14)
# $PROJECT_HOME/src/types.h(20): Inlining member function 'my_complex_float_t::my_complex_float_t' on object 'delay_lane' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(445): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'delay_lane.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(435): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, true>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(430): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, 32, true, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<0, 0, 32, 32, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<32, 32, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<32>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(445): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'delay_lane.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(435): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, true>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(430): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, 32, true, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<0, 0, 32, 32, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<32, 32, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<32>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $PROJECT_HOME/src/types.h(23): Inlining member function 'my_complex_float_t::my_complex_float_t' on object 'result' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(445): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'result.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(435): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, true>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(430): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, 32, true, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<0, 0, 32, 32, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<32, 32, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<32>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(445): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'result.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(435): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, true>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(430): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<32, 32, true, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<0, 0, 32, 32, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<32, 32, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<32>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $PROJECT_HOME/src/types.h(51): Inlining routine 'operator*' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(257): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(671): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator*<11, 1, 5, AC_TRN>' on object 'delay_lane.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'delay_lane.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'return.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(413): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(388): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<22, 2, 6, AC_TRN>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-32, 31, 22, 2, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<22>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(671): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator*<11, 1, 5, AC_TRN>' on object 'delay_lane.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'delay_lane.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'return.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(413): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(388): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<22, 2, 6, AC_TRN>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-32, 31, 22, 2, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<22>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(641): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::sub<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(524): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::plus_minus<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator>>=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-16, 15, 13, 2, AC_TRN, AC_WRAP>' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<13>' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(257): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(671): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator*<11, 1, 5, AC_TRN>' on object 'delay_lane.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'delay_lane.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'return.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(413): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(388): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<22, 2, 6, AC_TRN>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-32, 31, 22, 2, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<22>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(671): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator*<11, 1, 5, AC_TRN>' on object 'delay_lane.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'delay_lane.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'return.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(413): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<22, 2, 6, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(388): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float<22, 2, 6, AC_TRN>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-32, 31, 22, 2, AC_TRN, AC_WRAP>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<22, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<22>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(635): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::add<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(524): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::plus_minus<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator>>=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-16, 15, 13, 2, AC_TRN, AC_WRAP>' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<13>' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'ac_float:cctor' (CIN-64)
# $PROJECT_HOME/src/types.h(21): Inlining member function 'my_complex_float_t::my_complex_float_t' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return.imag' (CIN-64)
# $PROJECT_HOME/src/types.h(27): Inlining routine 'operator+' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(257): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(635): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::add<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(524): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::plus_minus<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'result.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'result.real' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'my_complex_float_t:cctor.real' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'result.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'my_complex_float_t:cctor.real' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator>>=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-16, 15, 13, 2, AC_TRN, AC_WRAP>' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<13>' on object 'r' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(257): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(635): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::add<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(524): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::plus_minus<11, 1, 5, AC_TRN, 11, 1, 5, AC_TRN>' on object 'result.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'result.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(473): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::exp' on object 'my_complex_float_t:cctor.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator+<5, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_int.h(2940): Inlining routine 'operator-<33, true>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'result.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(715): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::operator!' on object 'my_complex_float_t:cctor.imag' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator>>=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(296): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::assign_from<-16, 15, 13, 2, AC_TRN, AC_WRAP>' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<=<13, 2, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(273): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::round<13>' on object 'i' (CIN-64)
# $MGC_HOME/shared/include/ac_fixed.h(1337): Inlining routine 'operator<<11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MIN, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_fixed.h(1466): Inlining routine 'value<AC_VAL_MAX, 11, 1, true, AC_TRN, AC_WRAP>' (CIN-14)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'ac_float:cctor' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'ac_float:cctor' (CIN-64)
# $PROJECT_HOME/src/types.h(21): Inlining member function 'my_complex_float_t::my_complex_float_t' on object 'return' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return.real' (CIN-64)
# $MGC_HOME/shared/include/ac_float.h(261): Inlining member function 'ac_float<11, 1, 5, AC_TRN>::ac_float' on object 'return.imag' (CIN-64)
# $PROJECT_HOME/src/fir.cpp(3): Optimizing block '/fir' ... (CIN-4)
# $MGC_HOME/shared/include/ac_float.h(124): INOUT port 'taps.real.m' is only used as an input. (OPT-10)
# $MGC_HOME/shared/include/ac_float.h(125): INOUT port 'taps.real.e' is only used as an input. (OPT-10)
# $MGC_HOME/shared/include/ac_float.h(124): INOUT port 'taps.imag.m' is only used as an input. (OPT-10)
# $MGC_HOME/shared/include/ac_float.h(125): INOUT port 'taps.imag.e' is only used as an input. (OPT-10)
# $PROJECT_HOME/src/fir.cpp(6): Loop '/fir/core/SHIFT' iterated at most 15 times. (LOOP-2)
# $PROJECT_HOME/src/fir.cpp(12): Loop '/fir/core/MAC' iterated at most 16 times. (LOOP-2)
# Design 'fir' was read (SOL-1)
# Makefile for Original Design + Testbench written to file './scverify/Verify_orig_cxx_osci.mk'
# Info: CDesignChecker Shell script written to '/home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/fir.v1/CDesignChecker/design_checker.sh'
# Info: Completed transformation 'compile' on solution 'fir.v1': elapsed time 6.11 seconds, memory usage 1309500kB, peak memory usage 1309500kB (SOL-9)
# Info: Design complexity at end of 'compile': Total ops = 941, Real ops = 264, Vars = 237 (SOL-21)
# > solution library remove *
# > solution library add saed32lvt_tt0p78v125c_beh -- -rtlsyntool DesignCompiler -vendor SAED32 -technology {lvt tt0p78v125c}
# > solution library add saed32lvt_tt0p78v125c_dw_beh
# > go libraries
# Info: Starting transformation 'libraries' on solution 'fir.v1' (SOL-8)
# Info: Please set ComponentLibs/TechLibSearchPath to enable flows that use downstream synthesis tools (LIB-220)
# Reading component library '$MGC_HOME/pkgs/siflibs/mgc_busdefs.lib' [mgc_busdefs]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/siflibs/stdops.lib' [STDOPS]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/siflibs/fpops.lib' [FPOPS]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/siflibs/ccs_ioport.lib' [ccs_ioport]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/siflibs/mgc_ioport.lib' [mgc_ioport]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/cds_assert/assert_ops.lib' [ASSERT_OPS]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/cds_assert/assert_mods.lib' [assert_mods]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/siflibs/ccs_connections.lib' [ccs_connections]... (LIB-49)
# Reading component library '$MGC_HOME/pkgs/siflibs/saed/saed32lvt_tt0p78v125c_beh.lib' [saed32lvt_tt0p78v125c_beh]... (LIB-49)
# Warning: Component library 'saed32lvt_tt0p78v125c_beh' created with a newer version of Catapult Library Builder, 2023.2/1049340 > 2023.1_2/1049935 (LIB-83)
# Reading component library '$MGC_HOME/pkgs/siflibs/saed/saed32lvt_tt0p78v125c_dw_beh.lib' [saed32lvt_tt0p78v125c_dw_beh]... (LIB-49)
# Warning: Component library 'saed32lvt_tt0p78v125c_dw_beh' created with a newer version of Catapult Library Builder, 2023.2/1049340 > 2023.1_2/1049935 (LIB-83)
# Info: Completed transformation 'libraries' on solution 'fir.v1': elapsed time 0.94 seconds, memory usage 1309500kB, peak memory usage 1309500kB (SOL-9)
# Info: Design complexity at end of 'libraries': Total ops = 941, Real ops = 264, Vars = 237 (SOL-21)
# > directive set -CLOCKS {clk {-CLOCK_PERIOD 1 -CLOCK_EDGE rising}}
# /CLOCKS {clk {-CLOCK_PERIOD 1 -CLOCK_EDGE rising}}
# > go assembly
# Info: Starting transformation 'assembly' on solution 'fir.v1' (SOL-8)
# Info: Completed transformation 'assembly' on solution 'fir.v1': elapsed time 0.73 seconds, memory usage 1334124kB, peak memory usage 1334124kB (SOL-9)
# Info: Design complexity at end of 'assembly': Total ops = 942, Real ops = 265, Vars = 239 (SOL-21)
# > directive set /fir/core -DESIGN_GOAL Latency
# /fir/core/DESIGN_GOAL latency
# > directive set /fir/core/SHIFT -UNROLL yes
# /fir/core/SHIFT/UNROLL yes
# > directive set /fir/core/MAC -UNROLL yes
# /fir/core/MAC/UNROLL yes
# > go allocate
# Info: Starting transformation 'loops' on solution 'fir.v1' (SOL-8)
# $PROJECT_HOME/src/fir.cpp(6): Loop '/fir/core/SHIFT' is being fully unrolled (15 times). (LOOP-7)
# $PROJECT_HOME/src/fir.cpp(12): Loop '/fir/core/MAC' is being fully unrolled (16 times). (LOOP-7)
# Info: Running transformation 'loops' on solution 'fir.v1': elapsed time 29.83 seconds, memory usage 1399660kB, peak memory usage 1399660kB (SOL-15)
# $PROJECT_HOME/src/fir.cpp(3): Loop '/fir/core/main' is left rolled. (LOOP-4)
# Info: Completed transformation 'loops' on solution 'fir.v1': elapsed time 49.51 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-9)
# Info: Design complexity at end of 'loops': Total ops = 11718, Real ops = 2908, Vars = 2701 (SOL-21)
# Info: Starting transformation 'memories' on solution 'fir.v1' (SOL-8)
# $MGC_HOME/shared/include/ac_float.h(124): I/O-Port Resource '/fir/input.real.m:rsc' (from var: input.real.m) mapped to 'ccs_ioport.ccs_in' (size: 11). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(125): I/O-Port Resource '/fir/input.real.e:rsc' (from var: input.real.e) mapped to 'ccs_ioport.ccs_in' (size: 5). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(124): I/O-Port Resource '/fir/input.imag.m:rsc' (from var: input.imag.m) mapped to 'ccs_ioport.ccs_in' (size: 11). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(125): I/O-Port Resource '/fir/input.imag.e:rsc' (from var: input.imag.e) mapped to 'ccs_ioport.ccs_in' (size: 5). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(124): I/O-Port Resource '/fir/taps.real.m:rsc' (from var: taps.real.m) mapped to 'ccs_ioport.ccs_in' (size: 176). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(125): I/O-Port Resource '/fir/taps.real.e:rsc' (from var: taps.real.e) mapped to 'ccs_ioport.ccs_in' (size: 80). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(124): I/O-Port Resource '/fir/taps.imag.m:rsc' (from var: taps.imag.m) mapped to 'ccs_ioport.ccs_in' (size: 176). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(125): I/O-Port Resource '/fir/taps.imag.e:rsc' (from var: taps.imag.e) mapped to 'ccs_ioport.ccs_in' (size: 80). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(124): I/O-Port Resource '/fir/return.real.m:rsc' (from var: return.real.m) mapped to 'ccs_ioport.ccs_out' (size: 11). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(125): I/O-Port Resource '/fir/return.real.e:rsc' (from var: return.real.e) mapped to 'ccs_ioport.ccs_out' (size: 5). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(124): I/O-Port Resource '/fir/return.imag.m:rsc' (from var: return.imag.m) mapped to 'ccs_ioport.ccs_out' (size: 11). (MEM-2)
# $MGC_HOME/shared/include/ac_float.h(125): I/O-Port Resource '/fir/return.imag.e:rsc' (from var: return.imag.e) mapped to 'ccs_ioport.ccs_out' (size: 5). (MEM-2)
# Info: Running transformation 'memories' on solution 'fir.v1': elapsed time 23.22 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Running transformation 'memories' on solution 'fir.v1': elapsed time 45.73 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Completed transformation 'memories' on solution 'fir.v1': elapsed time 50.82 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-9)
# Info: Design complexity at end of 'memories': Total ops = 11778, Real ops = 2908, Vars = 2697 (SOL-21)
# Info: Starting transformation 'cluster' on solution 'fir.v1' (SOL-8)
# Warning: ROM clustering skipped Technology Library(ies) required for Prototyping not found (CLUSTER-24)
# Module 'leading_sign_13_1_1_0_fbd6b6484e0226fdfa7c7e6838ce99f45fe9_0' in the cache is valid & accepted for CCORE 'leading_sign_13_1_1_0_fbd6b6484e0226fdfa7c7e6838ce99f45fe9' (TD-3)
# Reading solution library '/home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/td_ccore_solutions/leading_sign_13_1_1_0_fbd6b6484e0226fdfa7c7e6838ce99f45fe9_0/.sif/solIndex_2_8ca97abc-c338-4d67-a14a-852c152e76c5.xml' ... (LIB-129)
# Module for CCORE 'leading_sign_13_1_1_0_fbd6b6484e0226fdfa7c7e6838ce99f45fe9' has been successfully synthesized (TD-4)
# Module 'leading_sign_18_1_1_0_7b2153b3b691fe1ab68d43c72c494a7b6845_0' in the cache is valid & accepted for CCORE 'leading_sign_18_1_1_0_7b2153b3b691fe1ab68d43c72c494a7b6845' (TD-3)
# Reading solution library '/home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/td_ccore_solutions/leading_sign_18_1_1_0_7b2153b3b691fe1ab68d43c72c494a7b6845_0/.sif/solIndex_2_40ef5a85-12b9-46ca-b502-a7553bd3a184.xml' ... (LIB-129)
# Module for CCORE 'leading_sign_18_1_1_0_7b2153b3b691fe1ab68d43c72c494a7b6845' has been successfully synthesized (TD-4)
# Info: Running transformation 'cluster' on solution 'fir.v1': elapsed time 22.68 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Completed transformation 'cluster' on solution 'fir.v1': elapsed time 26.60 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-9)
# Info: Design complexity at end of 'cluster': Total ops = 11611, Real ops = 2827, Vars = 2652 (SOL-21)
# Info: Starting transformation 'architect' on solution 'fir.v1' (SOL-8)
# Info: Running transformation 'architect' on solution 'fir.v1': elapsed time 26.41 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Design 'fir' contains '4935' real operations. (SOL-11)
# Warning: Extrapolation detected. Script '/home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/fir.v1/adjust_char_library.tcl' generated. (LIB-142)
# Info: Completed transformation 'architect' on solution 'fir.v1': elapsed time 46.96 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-9)
# Info: Design complexity at end of 'architect': Total ops = 13233, Real ops = 4935, Vars = 2328 (SOL-21)
# Info: Starting transformation 'allocate' on solution 'fir.v1' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/fir/core' (CRAAS-1)
# Info: Select qualified components for data operations ... (CRAAS-3)
# Info: Apply resource constraints on data operations ... (CRAAS-4)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 22.92 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# $PROJECT_HOME/src/fir.cpp(3): Prescheduled LOOP '/fir/core/main' (71 c-steps) (SCHD-7)
# $PROJECT_HOME/src/fir.cpp(3): Prescheduled LOOP '/fir/core/core:rlp' (0 c-steps) (SCHD-7)
# $PROJECT_HOME/src/fir.cpp(3): Prescheduled SEQUENTIAL '/fir/core' (total length 71 c-steps) (SCHD-8)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 45.26 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: $PROJECT_HOME/src/fir.cpp(3): Initial schedule of SEQUENTIAL '/fir/core': Latency = 70, Area (Datapath, Register, Total) = 275320.29, 51975.69, 327295.98 (CRAAS-11)
# At least one feasible schedule exists. (CRAAS-9)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 72.11 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 228046.45, 50198.74, 278245.19 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 101.96 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 210183.58, 50198.74, 260382.32 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 124.84 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 202407.26, 50198.74, 252606.00 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 147.37 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 201970.80, 50198.74, 252169.54 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 170.15 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 201899.13, 50198.74, 252097.87 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 195.92 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 201827.46, 50198.74, 252026.20 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 225.79 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 201731.90, 50198.74, 251930.64 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 248.55 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 200986.22, 50198.74, 251184.96 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 271.41 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 200328.71, 50198.74, 250527.45 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 294.39 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 200262.56, 50198.74, 250461.30 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 319.66 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 200196.41, 50198.74, 250395.15 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 349.52 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 200108.21, 50198.74, 250306.95 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 372.53 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 200042.06, 50198.74, 250240.80 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 395.37 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 417.71 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 443.32 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 473.19 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 495.30 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 518.02 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 540.30 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 567.10 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 196116.32, 50198.74, 246315.06 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 596.93 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 619.07 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 641.34 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 664.10 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 690.90 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 720.76 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 742.98 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 765.89 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 788.79 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 195625.85, 50198.74, 245824.59 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 814.69 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 191181.97, 50198.74, 241380.71 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 844.54 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 183597.89, 48977.09, 232574.98 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 867.63 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 180227.91, 48384.77, 228612.69 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 890.93 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 179155.68, 48569.87, 227725.55 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 914.07 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 174696.10, 48153.40, 222849.50 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 938.28 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 162084.57, 47126.10, 209210.67 (CRAAS-18)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 968.13 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 159111.70, 48107.13, 207218.82 (CRAAS-18)
# Info: $PROJECT_HOME/src/fir.cpp(3): Final schedule of SEQUENTIAL '/fir/core': Latency = 70, Area (Datapath, Register, Total) = 159111.70, 47977.56, 207089.25 (CRAAS-12)
# Resource allocation and scheduling done. (CRAAS-2)
# Netlist written to file 'schedule.gnt' (NET-4)
# Info: Running transformation 'allocate' on solution 'fir.v1': elapsed time 991.27 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-15)
# Info: Optimized LOOP '/fir/core/main': Latency = 70, Area (Datapath, Register, Total) = 159111.70, 48107.13, 207218.82 (CRAAS-18)
# Info: Completed transformation 'allocate' on solution 'fir.v1': elapsed time 993.21 seconds, memory usage 1334124kB, peak memory usage 1399660kB (SOL-9)
# Info: Design complexity at end of 'allocate': Total ops = 13233, Real ops = 4935, Vars = 2328 (SOL-21)
# > go extract
# Info: Starting transformation 'schedule' on solution 'fir.v1' (SOL-8)
# Performing concurrent resource allocation and scheduling on '/fir/core' (CRAAS-1)
# Global signal 'input.real.m:rsc.dat' added to design 'fir' for component 'input.real.m:rsci' (LIB-3)
# Global signal 'input.real.e:rsc.dat' added to design 'fir' for component 'input.real.e:rsci' (LIB-3)
# Global signal 'input.imag.m:rsc.dat' added to design 'fir' for component 'input.imag.m:rsci' (LIB-3)
# Global signal 'input.imag.e:rsc.dat' added to design 'fir' for component 'input.imag.e:rsci' (LIB-3)
# Global signal 'taps.real.m:rsc.dat' added to design 'fir' for component 'taps.real.m:rsci' (LIB-3)
# Global signal 'taps.real.e:rsc.dat' added to design 'fir' for component 'taps.real.e:rsci' (LIB-3)
# Global signal 'taps.imag.m:rsc.dat' added to design 'fir' for component 'taps.imag.m:rsci' (LIB-3)
# Global signal 'taps.imag.e:rsc.dat' added to design 'fir' for component 'taps.imag.e:rsci' (LIB-3)
# Global signal 'return.real.m:rsc.dat' added to design 'fir' for component 'return.real.m:rsci' (LIB-3)
# Global signal 'return.real.e:rsc.dat' added to design 'fir' for component 'return.real.e:rsci' (LIB-3)
# Global signal 'return.imag.m:rsc.dat' added to design 'fir' for component 'return.imag.m:rsci' (LIB-3)
# Global signal 'return.imag.e:rsc.dat' added to design 'fir' for component 'return.imag.e:rsci' (LIB-3)
# Global signal 'input.real.m.triosy.lz' added to design 'fir' for component 'input.real.m.triosy:obj' (LIB-3)
# Global signal 'input.real.e.triosy.lz' added to design 'fir' for component 'input.real.e.triosy:obj' (LIB-3)
# Global signal 'input.imag.m.triosy.lz' added to design 'fir' for component 'input.imag.m.triosy:obj' (LIB-3)
# Global signal 'input.imag.e.triosy.lz' added to design 'fir' for component 'input.imag.e.triosy:obj' (LIB-3)
# Global signal 'taps.real.m.triosy.lz' added to design 'fir' for component 'taps.real.m.triosy:obj' (LIB-3)
# Global signal 'taps.real.e.triosy.lz' added to design 'fir' for component 'taps.real.e.triosy:obj' (LIB-3)
# Global signal 'taps.imag.m.triosy.lz' added to design 'fir' for component 'taps.imag.m.triosy:obj' (LIB-3)
# Global signal 'taps.imag.e.triosy.lz' added to design 'fir' for component 'taps.imag.e.triosy:obj' (LIB-3)
# Global signal 'return.real.m.triosy.lz' added to design 'fir' for component 'return.real.m.triosy:obj' (LIB-3)
# Global signal 'return.real.e.triosy.lz' added to design 'fir' for component 'return.real.e.triosy:obj' (LIB-3)
# Global signal 'return.imag.m.triosy.lz' added to design 'fir' for component 'return.imag.m.triosy:obj' (LIB-3)
# Global signal 'return.imag.e.triosy.lz' added to design 'fir' for component 'return.imag.e.triosy:obj' (LIB-3)
# Info: Running transformation 'schedule' on solution 'fir.v1': elapsed time 29.83 seconds, memory usage 1432432kB, peak memory usage 1432432kB (SOL-15)
# Info: Running transformation 'schedule' on solution 'fir.v1': elapsed time 53.14 seconds, memory usage 1334124kB, peak memory usage 1432432kB (SOL-15)
# Info: Running transformation 'schedule' on solution 'fir.v1': elapsed time 75.43 seconds, memory usage 1334124kB, peak memory usage 1432432kB (SOL-15)
# Info: Running transformation 'schedule' on solution 'fir.v1': elapsed time 97.54 seconds, memory usage 1334124kB, peak memory usage 1432432kB (SOL-15)
# Report written to file 'cycle.rpt'
# Info: Completed transformation 'schedule' on solution 'fir.v1': elapsed time 118.06 seconds, memory usage 1334124kB, peak memory usage 1432432kB (SOL-9)
# Info: Design complexity at end of 'schedule': Total ops = 22104, Real ops = 4949, Vars = 3813 (SOL-21)
# Info: Starting transformation 'dpfsm' on solution 'fir.v1' (SOL-8)
# Performing FSM extraction... (FSM-1)
# Creating shared register 'ac_float:cctor.operator!:return#29.sva' for variables 'ac_float:cctor.operator!:return#29.sva, my_complex_float_t:cctor.imag.operator!:return#1.sva, ac_float:cctor.operator!:return#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#10.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#3.sva' for variables 'ac_float:cctor.operator!:return#3.sva, my_complex_float_t:cctor.imag.operator!:return#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#11.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#30.sva' for variables 'ac_float:cctor.operator!:return#30.sva, my_complex_float_t:cctor.imag.operator!:return#11.sva, ac_float:cctor.operator!:return#46.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#12.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#31.sva' for variables 'ac_float:cctor.operator!:return#31.sva, my_complex_float_t:cctor.imag.operator!:return#12.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#13.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#32.sva' for variables 'ac_float:cctor.operator!:return#32.sva, my_complex_float_t:cctor.imag.operator!:return#13.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#14.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#59.sva' for variables 'ac_float:cctor.operator!:return#59.sva, my_complex_float_t:cctor.imag.operator!:return#14.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#60.sva' for variables 'ac_float:cctor.operator!:return#60.sva, my_complex_float_t:cctor.imag.operator!:return#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:nand#1.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#61.sva' for variables 'ac_float:cctor.operator!:return#61.sva, my_complex_float_t:cctor.imag.operator!:return#3.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:nand#2.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#62.sva' for variables 'ac_float:cctor.operator!:return#62.sva, my_complex_float_t:cctor.imag.operator!:return#4.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:nand#3.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#63.sva' for variables 'ac_float:cctor.operator!:return#63.sva, my_complex_float_t:cctor.imag.operator!:return#5.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else:if:nand#4.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-10:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-10:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-2:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:all_sign#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_exponent_limited#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#1.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#10.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#11.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#12.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#13.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#14.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#2.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#3.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#4.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#5.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#6.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#7.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#8.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#9.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#1.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#10.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand.itm' (21 registers deleted). (FSM-3)
# Creating shared register 'MAC-10:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-10:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, MAC-2:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:all_sign#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_exponent_limited#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#11.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#2.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#1.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#10.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#11.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#12.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#13.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#14.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#2.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#3.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#4.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#5.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#6.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#7.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#8.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand#9.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:if:nand.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#14.itm' (21 registers deleted). (FSM-3)
# Creating shared register 'MAC-11:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-11:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-3:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_exponent_limited#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#12.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#3.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#15.itm, my_complex_float_t:cctor.imag.operator!:return.sva' (6 registers deleted). (FSM-3)
# Creating shared register 'MAC-11:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-11:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, MAC-3:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_exponent_limited#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#13.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#4.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand.itm, my_complex_float_t:cctor.real.operator!:return#1.sva' (6 registers deleted). (FSM-3)
# Creating shared register 'MAC-12:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-12:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-4:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_exponent_limited#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#14.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#5.itm, my_complex_float_t:cctor.real.operator!:return#10.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'MAC-12:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-12:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, MAC-4:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_exponent_limited#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#15.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#6.itm, my_complex_float_t:cctor.real.operator!:return#11.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'MAC-13:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-13:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-5:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#1.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#7.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#9.itm, my_complex_float_t:cctor.real.operator!:return#12.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'MAC-13:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-13:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, MAC-5:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#10.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#8.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#10.itm, my_complex_float_t:cctor.real.operator!:return#13.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'MAC-14:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-14:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-6:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#11.itm, my_complex_float_t:cctor.real.operator!:return#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#5.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-14:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-14:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, MAC-6:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#12.itm, my_complex_float_t:cctor.real.operator!:return#2.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#1.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#11.itm' (5 registers deleted). (FSM-3)
# Creating shared register 'MAC-15:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-15:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-7:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#13.itm, my_complex_float_t:cctor.real.operator!:return#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#12.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#2.itm' (5 registers deleted). (FSM-3)
# Creating shared register 'MAC-16:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-16:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, MAC-7:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#2.itm, my_complex_float_t:cctor.real.operator!:return#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#13.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#3.itm' (5 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#12.sva' for variables 'ac_float:cctor.operator!:return#12.sva, ac_float:cctor.operator!:return#16.sva, my_complex_float_t:cctor.imag.operator!:return#6.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#7.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#17.sva' for variables 'ac_float:cctor.operator!:return#17.sva, ac_float:cctor.operator!:return#27.sva, my_complex_float_t:cctor.imag.operator!:return#7.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#8.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#42.sva' for variables 'ac_float:cctor.operator!:return#42.sva, ac_float:cctor.operator!:return#47.sva, my_complex_float_t:cctor.imag.operator!:return#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#15.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.operator!:return#48.sva' for variables 'ac_float:cctor.operator!:return#48.sva, ac_float:cctor.operator!:return#57.sva, my_complex_float_t:cctor.imag.operator!:return#9.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_exponent_limited#9.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'MAC-8:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-8:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#3.itm, my_complex_float_t:cctor.real.operator!:return#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#4.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#9.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-8:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-8:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#4.itm, my_complex_float_t:cctor.real.operator!:return#6.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#6.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'MAC-9:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs' for variables 'MAC-9:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#5.itm, my_complex_float_t:cctor.real.operator!:return#7.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#7.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'MAC-9:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs' for variables 'MAC-9:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:or.svs, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else:if:nand#6.itm, my_complex_float_t:cctor.real.operator!:return#8.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:if:nand#8.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#1.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#10.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#11.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#12.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#2.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#6.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#7.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#8.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#9.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp.sva, MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' (17 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#14.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#1.sva, MAC-14:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#15.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#15.sva, MAC-15:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#2.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#2.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#1.sva, MAC-15:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp.sva, MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#10.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#10.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#2.sva, MAC-10:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#11.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#11.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#3.sva, MAC-10:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#12.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#12.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#4.sva, MAC-10:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#5.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#5.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#10.sva, MAC-10:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#6.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#6.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#11.sva, MAC-11:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#7.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#7.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#12.sva, MAC-11:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#9.lpi#1.dfm' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#9.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#10.lpi#1.dfm, MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#14.lpi#1.dfm' for variables 'r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#14.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#5.lpi#1.dfm, MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-11:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' for variables 'MAC-11:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#1.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#10.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#11.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#12.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#13.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#14.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#15.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#2.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#3.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#4.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#5.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#6.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#7.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#8.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#9.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#1.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#10.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#2.lpi#1.dfm' (19 registers deleted). (FSM-3)
# Creating shared register 'MAC-11:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' for variables 'MAC-11:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#2.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#15.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#2.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#3.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#4.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#5.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#6.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#7.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:acc.psp.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#3.sva' (18 registers deleted). (FSM-3)
# Creating shared register 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' for variables 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#3.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#11.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#3.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#1.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#10.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#11.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#12.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#13.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#14.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#15.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#2.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#3.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#4.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#5.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#6.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#7.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#8.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:_qr(5:0)#9.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#1.lpi#1.dfm' (19 registers deleted). (FSM-3)
# Creating shared register 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' for variables 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#4.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#12.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#4.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#15.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' for variables 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#5.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#13.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#5.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0).lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' for variables 'MAC-12:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#6.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#14.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#6.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#4.sva' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' for variables 'MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#7.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#15.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#7.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#5.sva' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' for variables 'MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_dif:acc.psp#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#8.lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0).lpi#1.dfm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#6.sva' (4 registers deleted). (FSM-3)
# Creating shared register 'MAC-15:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' for variables 'MAC-15:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#7.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#11.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#2.lpi#1.dfm' (3 registers deleted). (FSM-3)
# Creating shared register 'MAC-15:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' for variables 'MAC-15:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#8.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#12.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#3.lpi#1.dfm' (3 registers deleted). (FSM-3)
# Creating shared register 'MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' for variables 'MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#9.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#13.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#4.lpi#1.dfm' (3 registers deleted). (FSM-3)
# Creating shared register 'MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' for variables 'MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#6.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#2.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-1:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' for variables 'MAC-1:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#7.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#3.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-1:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' for variables 'MAC-1:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#8.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#4.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-1:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' for variables 'MAC-1:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#9.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#5.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#10.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#10.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#18.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#3.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#12.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#12.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#18.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#4.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#14.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#14.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#20.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#5.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#2.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#2.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#22.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#6.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#4.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#4.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#24.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#7.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#6.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#6.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#26.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#8.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#8.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:mux1h#8.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#28.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#10.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#10.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#30.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#2.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#12.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#12.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#18.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#3.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#14.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#14.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#18.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#4.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#2.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#2.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#20.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#5.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#4.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#4.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#22.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#6.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#6.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#6.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#24.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#7.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#8.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:mux1h#8.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#26.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#8.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#25.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#25.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#15.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#2.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#3.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#4.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#5.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#6.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#7.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0).sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#2.sva' (20 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#31.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#31.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#1.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#10.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#11.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#12.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#2.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#6.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#7.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#8.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#9.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0).sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#1.sva' (20 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#34.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#34.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#15.sva' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#37.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#37.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0).sva' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#40.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#40.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#6.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_l:mux#25.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:else#1:shift_l:mux#25.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:if#1:shift_r#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#15.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#7.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#25.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#25.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0).sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#31.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#31.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#9.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#10.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#34.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#34.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r#12.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#11.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#2.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#37.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#37.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#12.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#3.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#40.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#40.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#4.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#43.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#43.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#5.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#46.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:else#1:shift_l:mux#46.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:if#1:shift_r.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#6.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:else#1:shift_l:mux#25.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:else#1:shift_l:mux#25.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:if#1:shift_r#9.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#7.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#13.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#13.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#2.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#1.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#10.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#11.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#13.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#2.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#3.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#4.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#5.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#6.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#7.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#8.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#9.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and.itm' (17 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#14.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#14.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#3.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#15.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#1.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#10.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#11.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#12.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#13.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#14.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#2.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#3.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#4.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#5.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#6.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#7.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#8.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#9.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and.itm' (17 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#1.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#1.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#10.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#1.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#10.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#11.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#13.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#2.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#3.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#4.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#5.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#6.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#7.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#8.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#9.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux.itm' (17 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#14.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#14.lpi#1.dfm, operator*:ac_float:cctor.e#18.lpi#1.dfm, operator*:i.e#8.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#12.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#19.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#19.lpi#1.dfm, operator*:ac_float:cctor.e#44.lpi#1.dfm, operator*:i.e#9.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#13.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#29.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#29.lpi#1.dfm, operator*:i.e#10.lpi#1.dfm, operator*:ac_float:cctor.e#2.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#14.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#3.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#3.lpi#1.dfm, operator*:i.e#11.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ls(4:0)#10.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#31.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#31.lpi#1.dfm, operator*:i.e#12.lpi#1.dfm, operator*:ac_float:cctor.e#48.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#9.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#32.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#32.lpi#1.dfm, operator*:i.e#13.lpi#1.dfm, operator*:ac_float:cctor.e#49.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#33.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#33.lpi#1.dfm, operator*:i.e#14.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ls(4:0)#11.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#34.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#34.lpi#1.dfm, operator*:i.e#15.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ls(4:0)#12.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#59.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#59.lpi#1.dfm, operator*:i.e#2.lpi#1.dfm, operator*:ac_float:cctor.e#50.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#61.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#61.lpi#1.dfm, operator*:i.e#3.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ls(4:0)#13.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#62.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#62.lpi#1.dfm, operator*:i.e#4.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ls(4:0)#14.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#63.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#63.lpi#1.dfm, operator*:i.e#5.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:ls(4:0)#9.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#64.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#64.lpi#1.dfm, operator*:i.e#6.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#10.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.e#65.lpi#1.dfm' for variables 'operator*:ac_float:cctor.e#65.lpi#1.dfm, operator*:i.e#7.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#11.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#12.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#12.sva, operator*:i.e.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#1.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#12.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#13.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#13.sva, operator*:r.e#10.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#15.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#4.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#14.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#14.sva, operator*:r.e#11.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#5.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#12.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#2.sva' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#15.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#15.sva, operator*:r.e#12.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#6.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#13.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#3.sva' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#9.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0)#9.sva, operator*:r.e#13.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#7.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#2.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0).sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:ls(4:0).sva, operator*:r.e#14.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#8.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#3.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#10.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#10.sva, operator*:r.e#15.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#14.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#3.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#8.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#11.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#11.sva, operator*:r.e#2.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#11.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#13.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#2.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#1.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#10.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#11.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#12.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#13.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#14.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#2.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#3.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#4.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#5.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#6.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#7.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#8.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#9.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux.itm' (19 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#12.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#12.sva, operator*:r.e#3.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#15.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#4.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#9.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#13.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#13.sva, operator*:r.e#4.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#5.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#10.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#12.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#14.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#14.sva, operator*:r.e#5.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#6.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#11.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#13.itm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#15.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#15.sva, operator*:r.e#6.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#7.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#8.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#9.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0)#9.sva, operator*:r.e#7.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0).sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ls(4:0).sva, operator*:r.e#8.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#10.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#8.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#10.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#10.sva, operator*:r.e#9.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#11.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#5.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#11.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ls(4:0)#11.sva, operator*:r.e.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#12.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#4.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#1.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#1.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#1.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#10.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#18.itm, i.round<13>#1:else:m_0#1.sva, i.round<13>#1:else:m_0#10.sva, i.round<13>#1:else:m_0#11.sva, i.round<13>#1:else:m_0#12.sva, i.round<13>#1:else:m_0#13.sva, i.round<13>#1:else:m_0#14.sva, i.round<13>#1:else:m_0#15.sva, i.round<13>#1:else:m_0#2.sva, i.round<13>#1:else:m_0#3.sva, i.round<13>#1:else:m_0#4.sva, i.round<13>#1:else:m_0#5.sva, i.round<13>#1:else:m_0#6.sva, i.round<13>#1:else:m_0#7.sva, i.round<13>#1:else:m_0#8.sva, i.round<13>#1:else:m_0#9.sva, i.round<13>:else:m_0#1.sva, i.round<13>:else:m_0#10.sva, i.round<13>:else:m_0#2.sva' (22 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#15.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#15.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#15.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#10.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#19.itm, i.round<13>:else:m_0#11.sva, i.round<13>:else:m_0#3.sva, r.round<13>#1:else:m_0#1.sva, r.round<13>#1:else:m_0#10.sva, r.round<13>#1:else:m_0#11.sva, r.round<13>#1:else:m_0#12.sva, r.round<13>#1:else:m_0#13.sva, r.round<13>#1:else:m_0#14.sva, r.round<13>#1:else:m_0#15.sva, r.round<13>#1:else:m_0#2.sva, r.round<13>#1:else:m_0#3.sva, r.round<13>#1:else:m_0#4.sva, r.round<13>#1:else:m_0#5.sva, r.round<13>#1:else:m_0#6.sva, r.round<13>#1:else:m_0#7.sva, r.round<13>#1:else:m_0#8.sva, r.round<13>#1:else:m_0#9.sva, r.round<13>:else:m_0#1.sva' (22 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#2.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#2.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#11.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#11.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#21.itm, i.round<13>:else:m_0#12.sva, i.round<13>:else:m_0#4.sva, r.round<13>:else:m_0#15.sva, operator*:i.m.lpi#1.dfm' (8 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#3.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#3.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#3.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#12.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#12.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#23.itm, i.round<13>:else:m_0#13.sva, i.round<13>:else:m_0#5.sva, r.round<13>:else:m_0.sva, operator*:r.m#10.lpi#1.dfm' (8 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#4.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#4.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#4.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#13.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#13.sva#1, i.round<13>:else:m_0#14.sva, i.round<13>:else:m_0#6.sva, operator*:r.m#11.lpi#1.dfm' (6 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#5.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#5.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#5.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#14.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#14.sva#1, i.round<13>:else:m_0#15.sva, i.round<13>:else:m_0#7.sva, operator*:r.m#12.lpi#1.dfm' (6 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#6.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#6.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#6.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#15.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#15.sva#1, i.round<13>:else:m_0#8.sva, i.round<13>:else:m_0.sva, operator*:r.m#13.lpi#1.dfm' (6 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#7.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#7.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#7.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11).sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11).sva#1, i.round<13>:else:m_0#9.sva, r.round<13>:else:m_0#10.sva, operator*:r.m#14.lpi#1.dfm' (6 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#8.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#8.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#10.sva#1, operator*:r.m#15.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11).sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11).sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11).sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#10.sva#1, operator*:r.m#3.lpi#1.dfm, r.round<13>:else:m_0#6.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#1.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#1.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#1.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#11.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#11.sva#1, operator*:r.m#4.lpi#1.dfm, r.round<13>:else:m_0#7.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#2.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#2.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#12.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#12.sva#1, operator*:r.m#5.lpi#1.dfm, r.round<13>:else:m_0#8.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#3.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#3.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#3.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#13.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#13.sva#1, operator*:r.m#6.lpi#1.dfm, r.round<13>:else:m_0#9.sva' (5 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#4.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#4.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#4.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#14.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#14.sva#1, operator*:r.m#7.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#5.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#5.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#5.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#1.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#17.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#25.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#11.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#13.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#15.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#17.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#19.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#21.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#23.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#25.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#27.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#29.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#3.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#31.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#5.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#7.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#9.itm, r.round<13>:else:m_0#11.sva, r.round<13>:else:m_0#2.sva' (21 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#6.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#6.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#6.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#10.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#24.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#10.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#16.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#18.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#2.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#20.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#22.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#24.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#26.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#28.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#30.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#4.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#6.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#8.itm, r.round<13>:else:m_0#12.sva, r.round<13>:else:m_0#3.sva' (20 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#7.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#7.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#7.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#11.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#27.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#11.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#13.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#15.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#17.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#19.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#21.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#23.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#25.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#27.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#29.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#3.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#31.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#5.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#7.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#9.itm, operator*:r.m#2.lpi#1.dfm' (19 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#8.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#8.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#12.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#26.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#10.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#12.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#14.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#16.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#18.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#2.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#20.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#22.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#24.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#26.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#28.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#30.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#4.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#6.itm, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#8.itm, r.round<13>:else:m_0#13.sva, r.round<13>:else:m_0#4.sva' (20 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#1.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#1.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#1.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#13.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#29.itm, operator*:r.m#8.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#2.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#2.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#14.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#28.itm, operator*:r.m#9.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#3.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#3.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#3.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#15.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#31.itm, operator*:r.m.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#4.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#4.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#4.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#16.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#30.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux.itm, r.round<13>:else:m_0#14.sva, r.round<13>:else:m_0#5.sva' (6 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#5.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#5.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#5.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#2.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#6.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#6.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#6.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#3.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#7.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#7.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#7.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#4.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#8.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#8.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#5.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#1.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#1.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#1.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#6.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#15.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#15.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#15.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#7.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#2.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#2.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#2.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#8.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#3.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#3.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#3.sva#1, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#9.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#4.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#4.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#4.sva#1, operator*:ac_float:cctor.m#14.lpi#1.dfm, operator*:ac_float:cctor.m#18.lpi#1.dfm, operator*:i.m#10.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#5.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#5.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#5.sva#1, operator*:ac_float:cctor.m#19.lpi#1.dfm, operator*:ac_float:cctor.m#29.lpi#1.dfm, operator*:i.m#11.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#6.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#6.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#6.sva#1, operator*:ac_float:cctor.m#2.lpi#1.dfm, operator*:ac_float:cctor.m#31.lpi#1.dfm, operator*:i.m#12.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#7.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#7.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#7.sva#1, operator*:ac_float:cctor.m#3.lpi#1.dfm, operator*:i.m#13.lpi#1.dfm' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#8.sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#8.sva#1, operator*:ac_float:cctor.m#32.lpi#1.dfm, operator*:ac_float:cctor.m#48.lpi#1.dfm, operator*:i.m#14.lpi#1.dfm' (4 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11).sva' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11).sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11).sva#1, operator*:ac_float:cctor.m#33.lpi#1.dfm, operator*:i.m#15.lpi#1.dfm' (3 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.m#44.lpi#1.dfm' for variables 'operator*:ac_float:cctor.m#44.lpi#1.dfm, operator*:ac_float:cctor.m#49.lpi#1.dfm, operator*:i.m#3.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.m#50.lpi#1.dfm' for variables 'operator*:ac_float:cctor.m#50.lpi#1.dfm, operator*:ac_float:cctor.m#59.lpi#1.dfm, operator*:i.m#4.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.m#61.lpi#1.dfm' for variables 'operator*:ac_float:cctor.m#61.lpi#1.dfm, operator*:i.m#5.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#20.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.m#62.lpi#1.dfm' for variables 'operator*:ac_float:cctor.m#62.lpi#1.dfm, operator*:i.m#6.lpi#1.dfm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:op_lshift:mux#22.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#16.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#16.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#24.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#28.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#10.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#26.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#26.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#30.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#23.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#13.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#18.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#18.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#11.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#1.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#1.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#10.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#10.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#11.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#12.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#13.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#14.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#15.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#2.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#3.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#4.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#5.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#6.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#7.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#8.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#9.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1).sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#3.itm' (17 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#11.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#11.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#1.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#10.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#11.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#12.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#13.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#14.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#15.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#2.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#3.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#4.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#5.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#6.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#7.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#8.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#9.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1).sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#31.itm' (17 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#12.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#12.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#15.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#5.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#13.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#13.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1).sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#7.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#2.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#2.sva, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#1.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#11.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#19.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#3.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#3.sva, result.real.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#1.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#12.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#1.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#1.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#17.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#25.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#14.sva' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#10.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#10.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#27.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#15.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#13.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#13.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#20.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1).sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#15.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#15.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#21.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#5.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#22.itm' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#22.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#29.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#12.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#1.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#1.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#13.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#10.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#11.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#12.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#13.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#14.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#15.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#2.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#3.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#4.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#5.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#6.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#7.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#8.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#9.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp.sva' (16 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#10.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#10.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#10.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#11.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#12.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#13.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#14.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#15.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#2.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#3.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#4.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#5.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#6.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#7.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#8.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#9.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp.sva' (15 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#1.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#15.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#16.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#2.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#3.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#4.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#5.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#6.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#7.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:actual_max_shift_left:acc.psp#10.sva' (16 registers deleted). (FSM-3)
# Creating shared register 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:actual_max_shift_left:acc.psp#1.sva' for variables 'i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:actual_max_shift_left:acc.psp#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:actual_max_shift_left:acc.psp#2.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#1.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#10.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#11.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#12.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#16.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#6.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#7.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#8.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:actual_max_shift_left:acc.psp#9.sva' (16 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#4.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#4.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:acc.psp#6.sva, MAC-2:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#14.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#5.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#10.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#6.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#6.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:acc.psp#7.sva, MAC-3:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#6.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#6.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#8.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:mux1h#8.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:acc.psp#8.sva, MAC-3:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#7.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#7.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#10.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#10.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:acc.psp#3.sva, MAC-3:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#8.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#8.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#12.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#12.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:acc.psp#4.sva, MAC-3:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:acc.psp#9.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#6.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#11.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#8.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:_qr(6:0).lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#2.sva, operator*:ac_float:cctor.e#32.lpi#1.dfm, operator*:i.e#13.lpi#1.dfm, operator*:ac_float:cctor.e#49.lpi#1.dfm, MAC-4:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#4.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#4.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#14.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:_qr(6:0)#1.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#9.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#10.lpi#1.dfm, MAC-13:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#6.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:add_r(12:1)#6.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:op_lshift:mux#2.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:_qr(6:0)#15.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#14.lpi#1.dfm, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:_qr(5:0)#5.lpi#1.dfm, MAC-16:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-5:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' for variables 'MAC-5:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#25.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#15.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#2.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#3.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#4.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#5.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#6.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#7.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#8.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#9.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0).sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#1.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#10.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#2.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#8.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#4.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-6:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' for variables 'MAC-6:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#40.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#14.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#6.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#13.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:and#2.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#1.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#10.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#11.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#13.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#2.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#3.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#4.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#5.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#6.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#7.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#8.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and#9.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:and.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#14.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#14.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:acc.psp#9.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#1.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#10.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_t:mux#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#1.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#10.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#11.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#12.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#13.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#14.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#2.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#3.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#4.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#5.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#6.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#7.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#8.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#9.itm, result.imag.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux.itm, MAC-5:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#12.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#12.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#9.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#1.itm, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#9.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#8.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:acc.psp#9.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#14.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#2.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#2.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:acc.psp#6.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#15.itm, MAC-4:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#4.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#4.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:acc.psp#7.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#2.itm, MAC-4:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#6.itm' for variables 'ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:mux1h#6.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:acc.psp#8.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#3.itm, MAC-4:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#9.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#9.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:_qr(6:0)#1.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#1.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#5.itm, MAC-9:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#1.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#1.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#13.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#10.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#11.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#12.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#13.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#14.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#15.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#2.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#3.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#4.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#5.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#6.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#7.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#8.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp#9.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#2:rshift.psp.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#10.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#6.itm, MAC-9:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#10.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#10.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#10.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#11.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#12.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#13.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#14.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#15.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#2.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#3.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#4.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#5.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#6.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#7.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#8.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp#9.sva, operator>>=<13,2,true,AC_TRN,AC_WRAP>#3:rshift.psp.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#11.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux#7.itm, MAC-9:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#11.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#11.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:acc.psp#12.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:e_t:mux.itm, MAC-9:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' (3 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.m#34.lpi#1.dfm' for variables 'operator*:ac_float:cctor.m#34.lpi#1.dfm, operator*:i.m#2.lpi#1.dfm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#34.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#12.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#15.sva, MAC-5:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm' (2 registers deleted). (FSM-3)
# Creating shared register 'MAC-5:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm' for variables 'MAC-5:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#31.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#11.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#1.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#10.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#11.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#12.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#13.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#14.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#15.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#2.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#3.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#4.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#6.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#7.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#8.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0)#9.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>#1:ls(3:0).sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#1.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:qelse:qif:acc:pmx(4:0)#7.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:qelse:qif:acc:pmx(4:0)#12.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator*:ac_float:cctor.m#44.lpi#1.dfm' for variables 'operator*:ac_float:cctor.m#44.lpi#1.dfm, operator*:ac_float:cctor.m#49.lpi#1.dfm, operator*:i.m#3.lpi#1.dfm, MAC-6:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:else#1:shift_l:mux#37.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:if#1:shift_r#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#13.sva, i.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0)#5.sva, r.assign_from<-16,15,13,2,AC_TRN,AC_WRAP>:ls(3:0).sva' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#2.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#2.sva, MAC-7:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#4.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#4.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#13.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#13.sva#1, i.round<13>:else:m_0#14.sva, i.round<13>:else:m_0#6.sva, operator*:r.m#11.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#3.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#3.sva, MAC-7:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#5.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#5.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#14.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#14.sva#1, i.round<13>:else:m_0#15.sva, i.round<13>:else:m_0#7.sva, operator*:r.m#12.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#4.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#4.sva, MAC-8:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#6.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#6.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#15.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11)#15.sva#1, i.round<13>:else:m_0#8.sva, i.round<13>:else:m_0.sva, operator*:r.m#13.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#5.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#5.sva, MAC-8:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#2:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#7.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#7.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11).sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#2:op2(21:11).sva#1, i.round<13>:else:m_0#9.sva, r.round<13>:else:m_0#10.sva, operator*:r.m#14.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#6.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#6.sva, MAC-8:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#3:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#8.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11)#8.sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:op2(21:11)#10.sva#1, operator*:r.m#15.lpi#1.dfm' (2 registers deleted). (FSM-3)
# Creating shared register 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#7.sva' for variables 'ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>:add_r(12:1)#7.sva, MAC-8:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>:acc.itm, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11).sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#1:op2(21:11).sva#1, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#10.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>:op2(21:11)#10.sva#1, operator*:r.m#3.lpi#1.dfm, r.round<13>:else:m_0#6.sva' (2 registers deleted). (FSM-3)
# Creating shared register 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#9.sva' for variables 'operator>>=<13,2,true,AC_TRN,AC_WRAP>#1:rshift.psp#9.sva, ac_float:cctor.assign_from<-32,31,22,2,AC_TRN,AC_WRAP>#3:acc.psp.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#10.sva, ac_float:cctor.plus_minus<11,1,5,AC_TRN,11,1,5,AC_TRN>#1:e_dif:acc.psp#2.sva, MAC-10:ac_float<11,1,5,AC_TRN>::operator*<11,1,5,AC_TRN>#1:acc.itm' (2 registers deleted). (FSM-3)
# Info: Running transformation 'dpfsm' on solution 'fir.v1': elapsed time 23.25 seconds, memory usage 1399660kB, peak memory usage 1432432kB (SOL-15)
# Info: Completed transformation 'dpfsm' on solution 'fir.v1': elapsed time 37.34 seconds, memory usage 1334124kB, peak memory usage 1432432kB (SOL-9)
# Info: Design complexity at end of 'dpfsm': Total ops = 18241, Real ops = 8809, Vars = 3302 (SOL-21)
# Info: Starting transformation 'instance' on solution 'fir.v1' (SOL-8)
# Info: Running transformation 'instance' on solution 'fir.v1': elapsed time 27.68 seconds, memory usage 1399660kB, peak memory usage 1432432kB (SOL-15)
# Info: Running transformation 'instance' on solution 'fir.v1': elapsed time 57.52 seconds, memory usage 1399660kB, peak memory usage 1432432kB (SOL-15)
# Info: Running transformation 'instance' on solution 'fir.v1': elapsed time 80.67 seconds, memory usage 1399660kB, peak memory usage 1432432kB (SOL-15)
# Info: Running transformation 'instance' on solution 'fir.v1': elapsed time 103.22 seconds, memory usage 1399660kB, peak memory usage 1432432kB (SOL-15)
# Info: Completed transformation 'instance' on solution 'fir.v1': elapsed time 114.46 seconds, memory usage 1399660kB, peak memory usage 1432432kB (SOL-9)
# Info: Design complexity at end of 'instance': Total ops = 19382, Real ops = 8633, Vars = 18679 (SOL-21)
# Info: Starting transformation 'extract' on solution 'fir.v1' (SOL-8)
# Report written to file 'rtl.rpt'
# Generating scverify_top.cpp
# Netlist written to file 'rtl.v' (NET-4)
# generate concat
# order file name is: rtl.v_order.txt
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/ccs_in_v1.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/ccs_out_v1.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_io_sync_v2.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_shift_r_beh_v5.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_shift_l_beh_v5.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_shift_br_beh_v5.v
# Add dependent file: ../td_ccore_solutions/leading_sign_13_1_1_0_fbd6b6484e0226fdfa7c7e6838ce99f45fe9_0/rtl.v
# Add dependent file: ../td_ccore_solutions/leading_sign_18_1_1_0_7b2153b3b691fe1ab68d43c72c494a7b6845_0/rtl.v
# Add dependent file: ./rtl.v
# Finished writing concatenated file: /home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/fir.v1/concat_rtl.v
# order file name is: rtl.v_order_sim.txt
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/ccs_in_v1.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/ccs_out_v1.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_io_sync_v2.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_shift_r_beh_v5.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_shift_l_beh_v5.v
# Add dependent file: /eda/mentor/Siemens_EDA/Catapult_Synthesis_2023.1_2/Mgc_home/pkgs/siflibs/mgc_shift_br_beh_v5.v
# Add dependent file: ../td_ccore_solutions/leading_sign_13_1_1_0_fbd6b6484e0226fdfa7c7e6838ce99f45fe9_0/rtl.v
# Add dependent file: ../td_ccore_solutions/leading_sign_18_1_1_0_7b2153b3b691fe1ab68d43c72c494a7b6845_0/rtl.v
# Add dependent file: ./rtl.v
# Finished writing concatenated simulation file: /home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float/fir.v1/concat_sim_rtl.v
# Generating SCVerify testbench files
# Makefile for RTL Verilog output 'rtl.v' vs Untimed C++ written to file './scverify/Verify_rtl_v_msim.mk'
# Makefile for RTL Verilog output 'rtl.v' vs Untimed C++ written to file './scverify/Verify_rtl_v_ncsim.mk'
# Makefile for RTL Verilog output 'rtl.v' vs Untimed C++ written to file './scverify/Verify_rtl_v_vcs.mk'
# Info: Running transformation 'extract' on solution 'fir.v1': elapsed time 23.36 seconds, memory usage 1596268kB, peak memory usage 1596268kB (SOL-15)
# Makefile for Concat RTL Verilog output 'concat_sim_rtl.v' vs Untimed C++ written to file './scverify/Verify_concat_sim_rtl_v_msim.mk'
# Makefile for Concat RTL Verilog output 'concat_sim_rtl.v' vs Untimed C++ written to file './scverify/Verify_concat_sim_rtl_v_ncsim.mk'
# Makefile for Concat RTL Verilog output 'concat_sim_rtl.v' vs Untimed C++ written to file './scverify/Verify_concat_sim_rtl_v_vcs.mk'
# Info: Completed transformation 'extract' on solution 'fir.v1': elapsed time 33.03 seconds, memory usage 1596268kB, peak memory usage 1596268kB (SOL-9)
# Info: Design complexity at end of 'extract': Total ops = 19731, Real ops = 8950, Vars = 4149 (SOL-21)
# > project save
# Saving project file '/home/ajh9498/Documents/SALSA/FIR_COMPLEX/Catapult_16_complex_float.ccs'. (PRJ-5)
# > end dofile ./scripts/directives.tcl
